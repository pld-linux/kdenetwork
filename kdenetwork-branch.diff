Index: krdc/krdc.desktop
===================================================================
--- krdc/krdc.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ krdc/krdc.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -58,4 +58,4 @@
 GenericName[zh_HK]=遠端桌面連線
 GenericName[zh_TW]=連接遠端桌面
 DocPath=krdc/index.html
-Categories=Qt;KDE;Network;
+Categories=Qt;KDE;Network;RemoteAccess;
Index: krfb/krfb/krfb.desktop
===================================================================
--- krfb/krfb/krfb.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ krfb/krfb/krfb.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -59,4 +59,4 @@
 GenericName[zh_CN]=桌面共享
 GenericName[zh_HK]=桌面分享
 GenericName[zh_TW]=桌面分享
-Categories=Qt;KDE;System;
+Categories=Qt;KDE;System;RemoteAccess;Network;
Index: krfb/kcm_krfb/kcmkrfb.desktop
===================================================================
--- krfb/kcm_krfb/kcmkrfb.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ krfb/kcm_krfb/kcmkrfb.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -186,4 +186,4 @@
 Keywords[zh_CN]=desktop sharing,krfb,vnc,sharing,krdc,remote desktop connection,invitation,port,slp,uninvited,桌面共享,共享,远程桌面连接,邀请,端口,未邀请
 Keywords[zh_TW]=desktop sharing,krfb,vnc,sharing,rdp,krdc,remote desktop connection,rdp,桌面分享,分享,遠端桌面連線,invitation,port,slp,uninvited
 
-Categories=Qt;KDE;X-KDE-settings-network;
+Categories=Qt;KDE;X-KDE-settings-network;Settings;
Index: kopete/protocols/groupwise/gwcontact.h
===================================================================
--- kopete/protocols/groupwise/gwcontact.h	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/protocols/groupwise/gwcontact.h	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -130,6 +130,15 @@
 	 * Mark this contact as being deleted
 	 */
 	void setDeleting( bool deleting );
+	/**
+	 * Marks this contact as having sent a message whilst apparently offline
+	 */
+	void setMessageReceivedOffline( bool on );
+	/**
+	 * Has this contact sent a message whilst apparently offline?
+	 */
+	bool messageReceivedOffline() const;
+
 public slots:
 	/**
 	 * Transmits an outgoing message to the server 
@@ -179,6 +188,7 @@
 	// HACK: flag used to differentiate between 'all contact list instances gone while we are moving on the server' 
 	// and 'all contact list instances gone because we wanted to delete them all'
 	bool m_deleting;
+    bool m_messageReceivedOffline;
 };
 
 #endif
Index: kopete/protocols/groupwise/gwcontact.cpp
===================================================================
--- kopete/protocols/groupwise/gwcontact.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/protocols/groupwise/gwcontact.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -50,7 +50,7 @@
 			Kopete::MetaContact *parent, 
 			const int objectId, const int parentId, const int sequence )
 : Kopete::Contact( account, GroupWiseProtocol::dnToDotted( dn ), parent ), m_objectId( objectId ), m_parentId( parentId ),
-  m_sequence( sequence ), m_actionBlock( 0 ), m_archiving( false ), m_deleting( false )
+  m_sequence( sequence ), m_actionBlock( 0 ), m_archiving( false ), m_deleting( false ), m_messageReceivedOffline( false )
 {
 	if ( dn.find( '=' ) != -1 )
 	{
@@ -134,7 +134,7 @@
 	// in GWChatSession
 	// (This is a GroupWise rule, not a problem in Kopete)
 
-	if ( account()->isConnected() && isOnline()/* && account()->myself()->onlineStatus() != protocol()->groupwiseAppearOffline */)
+	if ( account()->isConnected() && ( isOnline() || messageReceivedOffline() ) /* && account()->myself()->onlineStatus() != protocol()->groupwiseAppearOffline */)
 		return true;
 	if ( !account()->isConnected()/* || account()->myself()->onlineStatus() == protocol()->groupwiseAppearOffline*/ )
 		return false;
@@ -227,6 +227,7 @@
 
 void GroupWiseContact::setOnlineStatus( const Kopete::OnlineStatus& status )
 {
+	setMessageReceivedOffline( false );
 	if ( status == protocol()->groupwiseAwayIdle && status != onlineStatus() )
 		setIdleTime( 1 );
 	else if ( onlineStatus() == protocol()->groupwiseAwayIdle && status != onlineStatus() )
@@ -299,6 +300,17 @@
 	else
 		kdDebug( GROUPWISE_DEBUG_GLOBAL ) << k_funcinfo << "rename failed, return code: " << uct->statusCode() << endl;
 }
+
+void GroupWiseContact::setMessageReceivedOffline( bool on )
+{
+	m_messageReceivedOffline = on;
+}
+
+bool GroupWiseContact::messageReceivedOffline() const
+{
+	return m_messageReceivedOffline;
+}
+
 #include "gwcontact.moc"
 
 // vim: set noet ts=4 sts=4 sw=4:
Index: kopete/protocols/groupwise/gwaccount.cpp
===================================================================
--- kopete/protocols/groupwise/gwaccount.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/protocols/groupwise/gwaccount.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -790,6 +790,13 @@
 	if ( !sender )
 		sender = createTemporaryContact( message.user );
 
+    // if we receive a message from an Offline contact, they are probably blocking us
+    // but we have to set their status to Unknown so that we can reply to them.
+    kdDebug( GROUPWISE_DEBUG_GLOBAL) << "sender is: " << sender->onlineStatus().description() << endl;
+    if ( sender->onlineStatus() == protocol()->groupwiseOffline ) {
+        sender->setMessageReceivedOffline( true );
+    }
+
 	Kopete::ContactPtrList contactList;
 	contactList.append( sender );
 	// FIND A MESSAGE MANAGER FOR THIS CONTACT
@@ -1352,6 +1359,11 @@
 		m_client->leaveConference( sess->guid() );
 	m_chatSessions.remove( sess );
 	kdDebug( GROUPWISE_DEBUG_GLOBAL ) << k_funcinfo << "m_chatSessions now contains:" << m_chatSessions.count() << " managers" << endl;
+	Kopete::ContactPtrList members = sess->members();
+	for ( Kopete::Contact * contact = members.first(); contact; contact = members.next() )
+	{
+		static_cast< GroupWiseContact * >( contact )->setMessageReceivedOffline( false );
+	}
 }
 
 void GroupWiseAccount::slotSetAutoReply()
Index: kopete/protocols/jabber/jabbergroupcontact.cpp
===================================================================
--- kopete/protocols/jabber/jabbergroupcontact.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/protocols/jabber/jabbergroupcontact.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -181,7 +181,7 @@
 		if ( !subContact )
 		{
 			kdWarning (JABBER_DEBUG_GLOBAL) << k_funcinfo << "the contact is not in the list   : " <<  message.from().full()<< endl;
-			return;
+
 			/**
 			 * We couldn't find the contact for this message. That most likely means
 			 * that it originated from a history backlog or something similar and
Index: kopete/kopete/contactlist/kopetecontactlistview.cpp
===================================================================
--- kopete/kopete/contactlist/kopetecontactlistview.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/kopete/contactlist/kopetecontactlistview.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -783,25 +783,6 @@
 		setTreeStepSize( 0 );
 	}
 
-	if( KopetePrefs::prefs()->contactListHideVerticalScrollBar() )
-	{
-		// This will disable scrollbar auto-hide feature if it's enabled
-		// and it will call setVScrollBarMode(Auto), so it must precede setScrollHide call
-		setScrollAutoHide( false );
-		setScrollHide( true );
-	}
-	else
-	{
-		// This will disable "always hide scrollbar" optio and call setVScrollBarMode(Auto)
-		// so it must precede setScrollAutoHide call
-		setScrollHide(false);
-		setScrollAutoHide( KopetePrefs::prefs()->contactListAutoHideVScroll() );
-	}
-	
-
-	setScrollAutoHideTimeout( KopetePrefs::prefs()->contactListAutoHideTimeout() );
-	setMouseNavigation( KopetePrefs::prefs()->contactListMouseNavigation() );
-
 	// maybe setEffects should read these from KopetePrefs itself?
 	Kopete::UI::ListView::Item::setEffects( KopetePrefs::prefs()->contactListAnimation(),
 	                                        KopetePrefs::prefs()->contactListFading(),
Index: kopete/kopete/kopete.desktop
===================================================================
--- kopete/kopete/kopete.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/kopete/kopete.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -117,7 +117,7 @@
 DocPath=kopete/index.html
 Terminal=false
 Icon=kopete
-Categories=Qt;KDE;Network;
+Categories=Qt;KDE;Network;InstantMessaging;
 X-DCOP-ServiceType=Unique
 X-DCOP-ServiceName=kopete
 ServiceTypes=DCOP/InstantMessenger
Index: kopete/kopete/config/appearance/appearanceconfig.cpp
===================================================================
--- kopete/kopete/config/appearance/appearanceconfig.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/kopete/config/appearance/appearanceconfig.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -256,8 +256,6 @@
 		this, SLOT(slotEditTooltips()));
 	connect(d->mPrfsContactList->mIndentContacts, SIGNAL(toggled(bool)),
 		this, SLOT(emitChanged()));
-	connect(d->mPrfsContactList->mHideVerticalScrollBar, SIGNAL(toggled(bool)),
-		this, SLOT(emitChanged()) );
 	connect(d->mPrfsContactList->mDisplayMode, SIGNAL(clicked(int)),
 		this, SLOT(emitChanged()));
 	connect(d->mPrfsContactList->mIconMode, SIGNAL(toggled(bool)),
@@ -270,8 +268,6 @@
 		this, SLOT(emitChanged()));
 	connect(d->mPrfsContactList->mAutoHide, SIGNAL(toggled(bool)),
 		this, SLOT(emitChanged()));
-	connect(d->mPrfsContactList->mAutoHideVScroll, SIGNAL(toggled(bool)),
-		this, SLOT(emitChanged()));
 	connect(d->mPrfsContactList->mAutoHideTimeout, SIGNAL(valueChanged(int)),
 		this, SLOT(emitChanged()));
 
@@ -368,7 +364,6 @@
 	p->setTreeView(d->mPrfsContactList->mTreeContactList->isChecked());
 	p->setSortByGroup(d->mPrfsContactList->mSortByGroup->isChecked());
 	p->setContactListIndentContacts(d->mPrfsContactList->mIndentContacts->isChecked());
-	p->setContactListHideVerticalScrollBar(d->mPrfsContactList->mHideVerticalScrollBar->isChecked());
 	p->setContactListDisplayMode(KopetePrefs::ContactDisplayMode(d->mPrfsContactList->mDisplayMode->selectedId()));
 	p->setContactListIconMode(KopetePrefs::IconDisplayMode((d->mPrfsContactList->mIconMode->isChecked()) ? KopetePrefs::PhotoPic : KopetePrefs::IconPic));
 	p->setContactListAnimation(d->mPrfsContactList->mAnimateChanges->isChecked());
@@ -389,7 +384,6 @@
 	p->setContactListCustomNormalFont(d->mPrfsColors->mNormalFont->font());
 	p->setContactListGroupNameColor(d->mPrfsColors->mGroupNameColor->color());
 	p->setContactListAutoHide(d->mPrfsContactList->mAutoHide->isChecked());
-	p->setContactListAutoHideVScroll(d->mPrfsContactList->mAutoHideVScroll->isChecked());
 	p->setContactListAutoHideTimeout(d->mPrfsContactList->mAutoHideTimeout->value());
 
 	p->setBgOverride( d->mPrfsColors->mBgOverride->isChecked() );
@@ -423,7 +417,6 @@
 	d->mPrfsContactList->mTreeContactList->setChecked( p->treeView() );
 	d->mPrfsContactList->mSortByGroup->setChecked( p->sortByGroup() );
 	d->mPrfsContactList->mIndentContacts->setChecked( p->contactListIndentContacts() );
-	d->mPrfsContactList->mHideVerticalScrollBar->setChecked( p->contactListHideVerticalScrollBar() );
 
         // convert old single value display mode to dual display/icon modes
         if (p->contactListDisplayMode() == KopetePrefs::Yagami) {
@@ -443,7 +436,6 @@
 #endif
 	d->mPrfsContactList->mFoldVisibility->setChecked( p->contactListFolding() );
 	d->mPrfsContactList->mAutoHide->setChecked( p->contactListAutoHide() );
-	d->mPrfsContactList->mAutoHideVScroll->setChecked( p->contactListAutoHideVScroll() );
 	d->mPrfsContactList->mAutoHideTimeout->setValue( p->contactListAutoHideTimeout() );
 
 	// "Colors & Fonts" TAB =====================================================
Index: kopete/kopete/config/appearance/appearanceconfig_contactlist.ui
===================================================================
--- kopete/kopete/config/appearance/appearanceconfig_contactlist.ui	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/kopete/config/appearance/appearanceconfig_contactlist.ui	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -8,7 +8,7 @@
         <rect>
             <x>0</x>
             <y>0</y>
-            <width>495</width>
+            <width>707</width>
             <height>445</height>
         </rect>
     </property>
@@ -81,17 +81,6 @@
                         </widget>
                     </hbox>
                 </widget>
-                <widget class="QCheckBox">
-                    <property name="name">
-                        <cstring>mHideVerticalScrollBar</cstring>
-                    </property>
-                    <property name="text">
-                        <string>&amp;Hide vertical scrollbar</string>
-                    </property>
-                    <property name="whatsThis" stdset="0">
-                        <string>&lt;b&gt;Always&lt;/b&gt; disables the vertical scrollbar</string>
-                    </property>
-                </widget>
             </vbox>
         </widget>
         <widget class="QGroupBox" row="0" column="1">
@@ -102,57 +91,57 @@
                 <string>Contact Display Mode</string>
             </property>
             <vbox>
-            	<property name="name">
-            	    <cstring>unnamed</cstring>
-            	</property>
-            	<widget class="QButtonGroup">
-            	    <property name="name">
-            	        <cstring>mDisplayMode</cstring>
-            	    </property>
-            	    <property name="title">
-            	        <string>List Style</string>
-            	    </property>
-            	    <vbox>
-            	        <property name="name">
-            	            <cstring>unnamed</cstring>
-            	        </property>
-            	        <widget class="QRadioButton">
-            	            <property name="name">
-            	                <cstring>radioButton8</cstring>
-            	            </property>
-            	            <property name="text">
-            	                <string>&amp;Classic, left-aligned status icons</string>
-            	            </property>
-            	            <property name="checked">
-            	                <bool>true</bool>
-            	            </property>
-            	        </widget>
-            	        <widget class="QRadioButton">
-            	            <property name="name">
-            	                <cstring>radioButton9</cstring>
-            	            </property>
-            	            <property name="text">
-            	                <string>&amp;Right-aligned status icons</string>
-            	            </property>
-            	        </widget>
-            	        <widget class="QRadioButton">
-            	            <property name="name">
-            	                <cstring>radioButton10</cstring>
-            	            </property>
-            	            <property name="text">
-            	                <string>Detailed &amp;view</string>
-            	            </property>
-            	        </widget>
-            	    </vbox>
-            	</widget>
-	    	<widget class="QCheckBox">
-            	    <property name="name">
-            	        <cstring>mIconMode</cstring>
-            	    </property>
-            	    <property name="text">
-            	        <string>Use contact photos when available</string>
-            	    </property>
-            	</widget>
+                <property name="name">
+                    <cstring>unnamed</cstring>
+                </property>
+                <widget class="QButtonGroup">
+                    <property name="name">
+                        <cstring>mDisplayMode</cstring>
+                    </property>
+                    <property name="title">
+                        <string>List Style</string>
+                    </property>
+                    <vbox>
+                        <property name="name">
+                            <cstring>unnamed</cstring>
+                        </property>
+                        <widget class="QRadioButton">
+                            <property name="name">
+                                <cstring>radioButton8</cstring>
+                            </property>
+                            <property name="text">
+                                <string>&amp;Classic, left-aligned status icons</string>
+                            </property>
+                            <property name="checked">
+                                <bool>true</bool>
+                            </property>
+                        </widget>
+                        <widget class="QRadioButton">
+                            <property name="name">
+                                <cstring>radioButton9</cstring>
+                            </property>
+                            <property name="text">
+                                <string>&amp;Right-aligned status icons</string>
+                            </property>
+                        </widget>
+                        <widget class="QRadioButton">
+                            <property name="name">
+                                <cstring>radioButton10</cstring>
+                            </property>
+                            <property name="text">
+                                <string>Detailed &amp;view</string>
+                            </property>
+                        </widget>
+                    </vbox>
+                </widget>
+                <widget class="QCheckBox">
+                    <property name="name">
+                        <cstring>mIconMode</cstring>
+                    </property>
+                    <property name="text">
+                        <string>Use contact photos when available</string>
+                    </property>
+                </widget>
             </vbox>
         </widget>
         <widget class="QGroupBox" row="2" column="0" rowspan="1" colspan="2">
@@ -177,18 +166,6 @@
                         <string>A&amp;uto-hide contact list</string>
                     </property>
                 </widget>
-                <widget class="QCheckBox">
-                    <property name="name">
-                        <cstring>mAutoHideVScroll</cstring>
-                    </property>
-                    <property name="text">
-                        <string>Auto-hide vertical &amp;scrollbar</string>
-                    </property>
-                    <property name="whatsThis" stdset="0">
-                        <string>Since vertical scrollbars occupy space, we introduced this auto-hide feature. The vertical scrollbar will not be available until you move your mouse over the contact list.&lt;br&gt;
-(&lt;b&gt;Disabled&lt;/b&gt; if "&lt;b&gt;Hide vertical scrollbar&lt;/b&gt;" option is selected above.)</string>
-                    </property>
-                </widget>
                 <widget class="QLayoutWidget">
                     <property name="name">
                         <cstring>layout2</cstring>
@@ -367,12 +344,6 @@
         <receiver>mIndentContacts</receiver>
         <slot>setDisabled(bool)</slot>
     </connection>
-    <connection>
-        <sender>mHideVerticalScrollBar</sender>
-        <signal>toggled(bool)</signal>
-        <receiver>mAutoHideVScroll</receiver>
-        <slot>setDisabled(bool)</slot>
-    </connection>
 </connections>
 <layoutdefaults spacing="6" margin="11"/>
 </UI>
Index: kopete/libkopete/kopeteprefs.h
===================================================================
--- kopete/libkopete/kopeteprefs.h	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/libkopete/kopeteprefs.h	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -112,7 +112,6 @@
 	///
 	enum IconDisplayMode { IconPic, PhotoPic, IconDefault = IconPic };
 	bool contactListIndentContacts() const { return mContactListIndentContacts; }
-	bool contactListHideVerticalScrollBar() const { return mContactListHideVerticalScrollBar; }
 	ContactDisplayMode contactListDisplayMode() const { return mContactListDisplayMode; }
 	IconDisplayMode contactListIconMode() const { return mContactListIconMode; }
 	bool contactListUseCustomFonts() const { return mContactListUseCustomFonts; }
@@ -125,7 +124,6 @@
 	bool contactListFolding() const { return mContactListFolding; }
 	bool contactListMouseNavigation() const { return mContactListMouseNavigation; }
 	bool contactListAutoHide() const { return mContactListAutoHide; }
-	bool contactListAutoHideVScroll() const { return mContactListAutoHideVScroll; }
 	unsigned int contactListAutoHideTimeout() const { return mContactListAutoHideTimeout; }
 
 	bool reconnectOnDisconnect() const { return mReconnectOnDisconnect; }
@@ -179,7 +177,6 @@
 	void setRememberedMessages(int);
 	void setToolTipContents(const QStringList &);
 	void setContactListIndentContacts( bool v );
-	void setContactListHideVerticalScrollBar( bool v );
 	void setContactListDisplayMode( ContactDisplayMode v );
 	void setContactListIconMode( IconDisplayMode v );
 	void setContactListUseCustomFonts( bool v );
@@ -191,7 +188,6 @@
 	void setContactListFolding( bool );
 	void setContactListMouseNavigation( bool );
 	void setContactListAutoHide( bool );
-	void setContactListAutoHideVScroll( bool );
 	void setContactListAutoHideTimeout( unsigned int );
 	void setReconnectOnDisconnect( bool newSetting );
 	void setTruncateContactNames( bool );
@@ -301,7 +297,6 @@
 	QStringList mToolTipContents;
 
 	bool mContactListIndentContacts;
-	bool mContactListHideVerticalScrollBar;
 	ContactDisplayMode mContactListDisplayMode;
 	IconDisplayMode mContactListIconMode;
 	bool mContactListUseCustomFonts;
@@ -313,7 +308,6 @@
 	bool mContactListFolding;
 	bool mContactListMouseNavigation;
 	bool mContactListAutoHide;
-	bool mContactListAutoHideVScroll;
 	unsigned int mContactListAutoHideTimeout;
 
 	bool mReconnectOnDisconnect;
Index: kopete/libkopete/kopeteprefs.cpp
===================================================================
--- kopete/libkopete/kopeteprefs.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/libkopete/kopeteprefs.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -135,7 +135,6 @@
                                   QString::fromLatin1("IconDefault"));
 	mContactListIconMode = (IconDisplayMode) metaObject()->property( n )->keyToValue( value.latin1() );
 	mContactListIndentContacts = config->readBoolEntry("IndentContacts", false);
-	mContactListHideVerticalScrollBar = config->readBoolEntry("HideVerticalScrollBar", false );
 	mContactListUseCustomFonts = config->readBoolEntry("UseCustomFonts", false);
 	QFont font = KGlobalSettings::generalFont();
 	mContactListNormalFont = config->readFontEntry("NormalFont", &font);
@@ -150,7 +149,6 @@
 	mContactListFolding = config->readBoolEntry("FoldItems", true);
 	mContactListMouseNavigation = config->readBoolEntry("MouseNavigation", false );
 	mContactListAutoHide = config->readBoolEntry("AutoHide", false);
-	mContactListAutoHideVScroll = config->readBoolEntry("AutoHideVScroll", true );
 	mContactListAutoHideTimeout = config->readUnsignedNumEntry("AutoHideTimeout", 30);
 
 	// Load the reconnection setting
@@ -234,7 +232,6 @@
 	n = metaObject()->findProperty( "contactListIconMode" );
 	config->writeEntry("IconMode", metaObject()->property( n )->valueToKey( mContactListIconMode ));
 	config->writeEntry("IndentContacts", mContactListIndentContacts);
-	config->writeEntry("HideVerticalScrollBar", mContactListHideVerticalScrollBar );
 	config->writeEntry("UseCustomFonts", mContactListUseCustomFonts);
 	config->writeEntry("NormalFont", mContactListNormalFont);
 	config->writeEntry("SmallFont", mContactListSmallFont);
@@ -244,7 +241,6 @@
 	config->writeEntry("FoldItems", mContactListFolding);
 	config->writeEntry("MouseNavigation", mContactListMouseNavigation );
 	config->writeEntry("AutoHide", mContactListAutoHide);
-	config->writeEntry("AutoHideVScroll", mContactListAutoHideVScroll );
 	config->writeEntry("AutoHideTimeout", mContactListAutoHideTimeout);
 
 	//Save the reconnection setting
@@ -572,12 +568,6 @@
 	mContactListIndentContacts = v;
 }
 
-void KopetePrefs::setContactListHideVerticalScrollBar( bool v )
-{
-	if( v != mContactListHideVerticalScrollBar ) mContactListAppearanceChanged = true;
-	mContactListHideVerticalScrollBar = v;
-}
-
 void KopetePrefs::setContactListDisplayMode( ContactDisplayMode v )
 {
 	if( v != mContactListDisplayMode ) mContactListAppearanceChanged = true;
@@ -656,12 +646,6 @@
 	mContactListAutoHide = n;
 }
 
-void KopetePrefs::setContactListAutoHideVScroll( bool n )
-{
-	if( n != mContactListAutoHideVScroll ) mContactListAppearanceChanged = true;
-	mContactListAutoHideVScroll = n;
-}
-
 void KopetePrefs::setContactListAutoHideTimeout( unsigned int n )
 {
 	if( n != mContactListAutoHideTimeout ) mContactListAppearanceChanged = true;
Index: kopete/libkopete/ui/kopetelistview.cpp
===================================================================
--- kopete/libkopete/ui/kopetelistview.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/libkopete/ui/kopetelistview.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -98,95 +98,8 @@
 {
 	QTimer sortTimer;
 	std::auto_ptr<ToolTip> toolTip;
-	//! The status of smooth scrolling, enabled or disabled.
-	bool smoothScrollingEnabled;
-	//! This will be the QTimer's ID which will be updating smooth scrolling animation.
-	double smoothScrollingTimer;
-	//! The time interval which the smooth scrolling will be updated.
-	double smoothScrollingTimerInterval;
-	//! This will be the target scroll bar position. Note that this value is in the sense of contents height in
-	//! in the scroll bar, not the regular XY coordinates in the widget.
-	double targetScrollBarValue;
-	//! Meta current scroll bar value, this will be used to make precise calculation, note that data type is double
-	//! Otherwise extra coding would be necessary to workaround lost precisions all around.
-	double metaScrollBarCurrentValue;
-	//! Acceleration constant. Actually deceleration.
-	double scrollBarAccelerationConstant;
-	//! Scroll line step size to emulate
-	int smoothScrollingLineStep;
-	//! Scroll page step size to emulate
-	int smoothScrollingPageStep;
-	//! The mouse position where the slider dragging began
-	int scrollBarSliderDragStartY;
-	//! True when the mouse is pressed
-	bool mousePressed;
-	//! This will be used to save drag auto scroll status of the scrollview
-	//! we will need to restore it later.
-	bool smoothScrollDragAutoScroll;
-	//! Auto scroll offset, the list will automatically start scrolling when the mouse gets this much pixel closer
-	//! to the upper or bottom edges of the listview.
-	int smoothAutoScrollOffset;
-	//! The last pressed control of one of the scrollbars 
-	//! (next page, previous line)
-	QStyle::SubControl pressedControl;
-	//! Counter we'll use when waiting.This amount of timeouts is required before beginning to emulate continous
-	//! scrollbar button presses
-	int smoothScrollContinuousCounter;
-	//! The timer which will simulate continous button press for line step buttons in scrollview
-	int continuousLinePressTimer;
-	//! How many timeouts should we wait before beginning continuous line step simulates
-	int continuousLinePressTimerWait;
-	//! Continuous press timer interval for next line buttton
-	int continuousLinePressTimerInterval;
-	//! The timer which will simulate continous page step in scrollview
-	int continuousPagePressTimer;
-	//! How many timeouts should we wait before beginning continuous page step simulates
-	int continuousPagePressTimerWait;
-	//! Continuous press timer interval for next page clicks
-	int continuousPagePressTimerInterval;
-	//! The timer that will manage scroll bar auto-hiding
-	int scrollAutoHideTimer;
-	//! Timeout counter for scroll bar auto-hiding
-	int scrollAutoHideCounter;
-	//! Timeout for scroll bar auto-hiding
-	int scrollAutoHideTimeout;
-	//! State of scroll auto hide
-	bool scrollAutoHide;
-	//! State of always hide scrollbar feature
-	bool scrollHide;
-	//! Muse navigation offset, we will ignore this much offset to the up/bottom edges
-	int mouseNavigationOffset;
-	//! State of mouse navigation feature
-	bool mouseNavigation;
 	//! C-tor
-	Private()
-	: smoothScrollingEnabled(false),
-	  smoothScrollingTimer(0),
-	  smoothScrollingTimerInterval(30),
-	  targetScrollBarValue(0),
-	  metaScrollBarCurrentValue(0.0),
-	  scrollBarAccelerationConstant(6.0),
-	  smoothScrollingLineStep(0),
-	  smoothScrollingPageStep(0),
-	  scrollBarSliderDragStartY(0),
-	  mousePressed(false),
-	  smoothScrollDragAutoScroll(false),
-	  smoothAutoScrollOffset(60),
-	  pressedControl( QStyle::SC_None ),
-	  smoothScrollContinuousCounter(0),
-	  continuousLinePressTimer(0),
-	  continuousLinePressTimerWait(10),
-	  continuousLinePressTimerInterval(40),
-	  continuousPagePressTimer(0),
-	  continuousPagePressTimerWait(2),
-	  continuousPagePressTimerInterval(200),
-	  scrollAutoHideTimer(0),
-	  scrollAutoHideCounter(10),
-	  scrollAutoHideTimeout(10),
-	  scrollAutoHide(false),
-	  scrollHide(false),
-	  mouseNavigationOffset(20),
-	  mouseNavigation(false) {}
+	Private() {}
 };
 
 ListView::ListView( QWidget *parent, const char *name )
@@ -219,12 +132,6 @@
 	// This is, of course, a nasty hack, but it works, so...
 	static_cast<ListView*>(viewport())->clearWFlags( WStaticContents );
 	static_cast<ListView*>(viewport())->setWFlags( WNoAutoErase );
-
-	// init smooth scrolling
-
-	KConfig *config = KGlobal::config();
-	config->setGroup( "ContactList" );
- 	setSmoothScrolling( config->readBoolEntry( "SmoothScrolling", true ) );
 }
 
 ListView::~ListView()
@@ -299,428 +206,6 @@
 		d->sortTimer.start( 500, true );
 }
 
-///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-// 						Here begins the smooth scrolling hack 
-///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-// What is this: This hack enables smooth scrolling, and intercepts all events that goes to scrollbar. Unless we do so, scrollbar
-//               will react to the mouse clicks and go _immedietly_ to the target value (i.e. next page) then when the smoothscroll
-//		 takes effect the scrollbar slider will start to scroll smoothly, so the first slider movement due to scrollbar
-//		 click causes a flickery. So we avoid all scrollbar events, and emulate them smoothly.
-///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-// Bugs: * Scroll bar loses it's onMouseOver color when we drag the scroll bar and move the mouse outside of the slider
-//       * Next/Prev page areas don't get mouse clicks, some styles gives some feedback on such an event
-//         and that feedback is unintentionally avoided by this hack. Many many contraints caused this choice.
-//	 * Horizontal scroll bar seems to flicker when the scrollbars are being showed in auto-hide mode
-///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-
-void ListView::setSmoothScrolling( bool b )
-{
-	if( d->smoothScrollingEnabled == b ) 	// Is setting changed?
-		return;				// If no, just return
-	else					// else
-		d->smoothScrollingEnabled = b;  // update the setting
-
-	if( d->smoothScrollingEnabled )		// If enabled
-	{
-		// Intercept scrollbar's events
-		verticalScrollBar()->installEventFilter( this );
-		// Install the timer
-		d->smoothScrollingTimer = startTimer( (int)d->smoothScrollingTimerInterval );
-		// If we want to enable smooth scrolling when item has changed with keypresses etc, we need this
-		connect( this, SIGNAL( currentChanged( QListViewItem* ) ), this, SLOT( slotCurrentChanged(QListViewItem*) ) );
-		// Disable autoscroll, we will do it the smooth way.
-		d->smoothScrollDragAutoScroll = dragAutoScroll();
-		setDragAutoScroll( false );
-		// Init the timers to simulate continuous press
-		d->continuousLinePressTimer = startTimer( d->continuousLinePressTimerInterval );
-		d->continuousPagePressTimer = startTimer( d->continuousPagePressTimerInterval );
-		
-	}
-	else	// If disabled
-	{
-		// Uninstall the event interception from the scroll bar
-		verticalScrollBar()->removeEventFilter( this );
-		// Restore line/page step sizes
-		verticalScrollBar()->setLineStep( d->smoothScrollingLineStep );
-		// Kill the already started timer
-		killTimer( (int)d->smoothScrollingTimer );
-		d->smoothScrollingTimer = 0;
-		// We don't need to list currentChanged anymore
-		disconnect( this, SIGNAL( currentChanged( QListViewItem* ) ), this, SLOT( slotCurrentChanged(QListViewItem*) ) );
-		// Restore the autoscroll
-		setDragAutoScroll( d->smoothScrollDragAutoScroll );
-		// Kill the continuous press timers
-		killTimer( d->continuousLinePressTimer  );
-		d->continuousLinePressTimer = 0;
-		killTimer( d->continuousPagePressTimer  );
-		d->continuousPagePressTimer = 0;
-	}
-}
-
-bool ListView::smoothScrolling() const
-{
-	return d->smoothScrollingEnabled;
-}
-
-void ListView::setSmoothScrollingTimerInterval( double i )
-{
-	d->smoothScrollingTimerInterval = i;
-}
-
-double ListView::smoothScrollingTimerInterval() const
-{
-	return d->smoothScrollingTimerInterval;
-}
-
-void ListView::setScrollAutoHide( bool b )
-{
-	// If no change, just bail
-	if( d->scrollAutoHide == b ) return;
-
-	if( b )
-	{
-		// Set scrollbar auto-hiding state true
-		d->scrollAutoHide = true;
-		// Turn of the bar now
-		setVScrollBarMode( AlwaysOff );
-		// Start the timer to handle auto-hide
-		killTimer( d->scrollAutoHideTimer );
-		d->scrollAutoHideTimer = startTimer( 1000 );
-	}
-	else
-	{
-		d->scrollAutoHide = false;
-		setVScrollBarMode( Auto );
-		killTimer( d->scrollAutoHideTimer );
-	}
-}
-
-bool ListView::scrollAutoHide() const
-{
-	return d->scrollAutoHide;
-}
-
-void ListView::setScrollAutoHideTimeout( int t )
-{
-	d->scrollAutoHideTimeout = t;
-}
-
-int ListView::scrollAutoHideTimeout() const
-{
-	return d->scrollAutoHideTimeout;
-}
-
-void ListView::setScrollHide( bool b )
-{
-	// if no change, just bail
-	if( d->scrollHide == b ) return;
-
-	d->scrollHide = b;
-	if( b )
-		setVScrollBarMode( AlwaysOff );
-	else
-		setVScrollBarMode( Auto );
-}
-
-bool ListView::scrollHide() const
-{
-	return d->scrollHide;
-}
-
-void ListView::setMouseNavigation( bool b )
-{
-	d->mouseNavigation = b;
-}
-
-bool ListView::mouseNavigation() const
-{
-	return d->mouseNavigation;
-}
-
-void ListView::timerEvent( QTimerEvent *e )
-{
-	if( e->timerId() == d->smoothScrollingTimer )
-	{ // This is a smooth scroll update
-		// Find how war we are away from the target scroll bar value and divide it by our constant (it can be both negative/positive)
-		double offset = static_cast<double>( ( d->targetScrollBarValue - d->metaScrollBarCurrentValue ) / d->scrollBarAccelerationConstant );
-		// Add the offset to our meta current value, this is the desired precise value
-		d->metaScrollBarCurrentValue += offset;
-		// Cast it to integer and update the vertical scroll bar value
-		verticalScrollBar()->setValue( static_cast<int>( d->metaScrollBarCurrentValue ) );
-	}
-	else if( e->timerId() == d->continuousLinePressTimer )
-	{
-		// If the button is being pressed for a longer time, get faster
-		// X = time spent untill continuous button press begins to take effect
-		// Wait for X more amount of time after the continuous button press actually begins, the start to accelerate the scrolling linearly
-		double acceleration = static_cast<double>( ( d->smoothScrollContinuousCounter - d->continuousLinePressTimerWait * 2 ) ) / 
-				      static_cast<double>( d->continuousLinePressTimerWait );
-		// Let's make sure if the acceleration coefficient is between 1 and 3
-		acceleration = QMAX( 1, acceleration );
-		acceleration = QMIN( 3, acceleration );
-
-		// Check if any scrollbar buttons are being pressed right, if any, honor them
-		if( d->pressedControl == QStyle::SC_ScrollBarSubLine )
-		{	// Check if the user has pressed for long enough to activate continuous mouse press effect
-			if( d->smoothScrollContinuousCounter++ > d->continuousLinePressTimerWait ) // pressed long enough ?
-			{
-				d->targetScrollBarValue -= d->smoothScrollingLineStep * acceleration; // if so start continuous scrolling
-				// Make sure the target value is not below the minimum range.
-				d->targetScrollBarValue = QMAX( d->targetScrollBarValue, verticalScrollBar()->minValue() );
-			}
-		}
-		else if( d->pressedControl == QStyle::SC_ScrollBarAddLine )
-		{
-			if( d->smoothScrollContinuousCounter++ > d->continuousLinePressTimerWait ) // pressed long enough ?
-			{
-				d->targetScrollBarValue += d->smoothScrollingLineStep * acceleration; // if so start continuous scrolling
-				// Make sure the target value is not aboce the maximum range.
-				d->targetScrollBarValue = QMIN( d->targetScrollBarValue, verticalScrollBar()->maxValue() );
-			}
-		}
-	}
-	else if( e->timerId() == d->continuousPagePressTimer )
-	{
-		// If the button is being pressed for a longer time, get faster
-		// X = time spent untill continuous button press begins to take effect
-		// Wait for X more amount of time after the continuous button press actually begins, the start to accelerate the scrolling linearly
-		double acceleration = static_cast<double>( ( d->smoothScrollContinuousCounter - d->continuousPagePressTimerWait * 2 ) ) / 
-				      static_cast<double>( d->continuousPagePressTimerWait );
-		// Let's make sure if the acceleration coefficient is between 1 and 3
-		acceleration = QMAX( 1, acceleration );
-		acceleration = QMIN( 3, acceleration );
-
-		if( d->pressedControl == QStyle::SC_ScrollBarSubPage )
-		{
-			if( d->smoothScrollContinuousCounter++ > d->continuousPagePressTimerWait ) // pressed long enough ?
-			{
-				d->targetScrollBarValue -= d->smoothScrollingPageStep + acceleration; // if so start continuous scrolling
-				d->targetScrollBarValue = QMAX( d->targetScrollBarValue, verticalScrollBar()->minValue() );
-			}
-		}
-		else if( d->pressedControl == QStyle::SC_ScrollBarAddPage )
-		{
-			if( d->smoothScrollContinuousCounter++ > d->continuousPagePressTimerWait ) // pressed long enough ?
-			{
-				d->targetScrollBarValue += d->smoothScrollingPageStep * acceleration; // if so start continuous scrolling
-				d->targetScrollBarValue = QMIN( d->targetScrollBarValue, verticalScrollBar()->maxValue() );
-			}
-		}
-	}
-	else if( e->timerId() == d->scrollAutoHideTimer )
-	{
-		if( !d->scrollAutoHideCounter-- )
-			setVScrollBarMode( AlwaysOff );
-	}
-}
-
-bool ListView::eventFilter( QObject *o, QEvent *e )
-{
-	if( o == verticalScrollBar() ) // Event's to scroll bar
-	{
-		// Our scroll bar
-		QScrollBar *bar = static_cast<QScrollBar*>(o);
-		if( e->type() == QEvent::Wheel )
-		{
-			// OK, this is a wheel event, let's get our QWheelEvent in an unsafe way, due to a bug in RTTI of QT.
-			QWheelEvent *event = static_cast<QWheelEvent*>(e);
-			// Set new target value
-			d->targetScrollBarValue -= event->delta();
-			// Make sure it's in the boundaries of scroll bar
-			d->targetScrollBarValue = QMAX( d->targetScrollBarValue, bar->minValue() );
-			d->targetScrollBarValue = QMIN( d->targetScrollBarValue, bar->maxValue() );
-			return true; // Ignore the event
-		}
-		else if( e->type() == QEvent::MouseButtonPress || e->type() == QEvent::MouseButtonDblClick )
-		{
-			// We are intercepting all clicks and double clicks on the scrollbar. Unless we do so
-			// scroll bar immediatly goes to the point wherever user's click requests it to.
-			// Then smooth scroll begins, and animates the scrolling, but since the scrollbar
-			// goes to the destionation point for a very small amount of time at the very beginning of
-			// the click, this causes flickering. So we intercept each click, and make the scroll bar
-			// go to it's destination by smoothly.
-
-			// Get our QMouseEvent so that we can have our relative mouse position
-			QMouseEvent *event = static_cast<QMouseEvent*>(e);
-			d->pressedControl = style().querySubControl( QStyle::CC_ScrollBar, verticalScrollBar(), event->pos() );
-
-			// Get page/line step sizes. You may ask, why we are not doing this in setSmoothScrolling
-			// the reason is, scroll bar might not be initialized at that moment. When we are receiving
-			// MouseButtonPress or such event, we're sure that it's initialized!
-			if( d->smoothScrollingLineStep == 0 && d->smoothScrollingPageStep == 0 ){
-				d->smoothScrollingLineStep = bar->lineStep();
-				d->smoothScrollingPageStep = bar->pageStep();
-				// Set page/line steps of the scroll bar to zero, we'll emulate them, smoothly!
-				// If we don't set this to 0, when we pass the event to the button, the scollbar
-				// will scroll the list too.
-				verticalScrollBar()->setLineStep( 0 );
-			}
-
-			// OK, now we can understand which partion of the scroll bar is clicked, and do the requested thing
-			// animated. Then set the step sizes to zero, and pass the event to the slider, so that user can
-			// feel like he/she really pressed the buttons (on click color change).		
-
-			switch( d->pressedControl )
-			{
-			case QStyle::SC_ScrollBarSlider:
-				d->scrollBarSliderDragStartY = event->y();
-			break;
-			case QStyle::SC_ScrollBarSubLine:
-				d->targetScrollBarValue -= d->smoothScrollingLineStep;
-				// Make sure if the targetScrollBarValue is in the scroll bar values range
-				d->targetScrollBarValue = QMAX( d->targetScrollBarValue, verticalScrollBar()->minValue() );
-				return false; // pass the event to the scroll bar so the button gets "clicked"
-			break;
-			case QStyle::SC_ScrollBarSubPage:
-				d->targetScrollBarValue -= d->smoothScrollingPageStep;
-				// Make sure if the targetScrollBarValue is in the scroll bar values range
-				d->targetScrollBarValue = QMAX( d->targetScrollBarValue, verticalScrollBar()->minValue() );
-			break;
-			case QStyle::SC_ScrollBarAddPage:
-				d->targetScrollBarValue += d->smoothScrollingPageStep;
-				// Make sure if the targetScrollBarValue is in the scroll bar values range
-				d->targetScrollBarValue = QMIN( d->targetScrollBarValue, verticalScrollBar()->maxValue() );
-			break;
-			case QStyle::SC_ScrollBarAddLine:
-				d->targetScrollBarValue += d->smoothScrollingLineStep;
-				// Make sure if the targetScrollBarValue is in the scroll bar values range
-				d->targetScrollBarValue = QMIN( d->targetScrollBarValue, verticalScrollBar()->maxValue() );
-				return false; // pass the event to the scroll bar so the button gets "clicked"
-			break;
-			default:
-				kdDebug( 14010 ) << k_funcinfo << "Unhandled sub control" << endl;
-			}
-			return true; // Now, ignore the event.
-		}
-		else if( e->type() == QEvent::MouseMove )
-		{
-			// Get our QMouseEvent so that we can have our relative mouse position
-			QMouseEvent *event = static_cast<QMouseEvent*>(e);
-			if( d->pressedControl == QStyle::SC_ScrollBarSlider )
-			{
-				// Mouse movement distance for this MouseMove event
-				double delta = event->y() - d->scrollBarSliderDragStartY;
-				// Update the drag start value so in the next MouseMove event we can calculate new movement distance
-				d->scrollBarSliderDragStartY = event->y();
-				// The length which we can move the mouse over the bar
-				double scale = bar->geometry().height() - bar->sliderRect().height() - 45;
-				// Scale it to scroll bar value
-				d->targetScrollBarValue += static_cast<int>( static_cast<double>( ( bar->maxValue() / scale ) * delta ) );
-			}
-
-			if( d->scrollAutoHide ) // If auto-hide scroll bar is enabled
-			{
-				d->scrollAutoHideCounter = 9999;		// Mouse is dragging the scrollbar slider
-			}
-		}
-		else if( e->type() == QEvent::Enter )
-		{
-			if( d->scrollAutoHide ) // If auto-hide scroll bar is enabled
-			{
-				d->scrollAutoHideCounter = 9999;		// Mouse is on the scroll bar
-			}
-		}
-		else if( e->type() == QEvent::Leave )
-		{
-			if( d->scrollAutoHide ) // If auto-hide scroll bar is enabled
-			{		// show the scroll bar
-				d->scrollAutoHideCounter = d->scrollAutoHideTimeout;		// Mouse is on the scroll bar
-			}
-		}
-		else if( e->type() == QEvent::MouseButtonRelease )
-		{
-			// Reset waiting counter. This is used to wait before simulating continuous mouse press
-			d->smoothScrollContinuousCounter = 0;
-			// Mark all buttons as not pressed now
-			d->pressedControl = QStyle::SC_None;
-			// Make sure if the targetScrollBarValue is in the scroll bar values range
-			d->targetScrollBarValue = QMAX( d->targetScrollBarValue, bar->minValue() );
-			d->targetScrollBarValue = QMIN( d->targetScrollBarValue, bar->maxValue() );
-			return false; // Pass the release event to the scroll bar, which will put the buttons in off-state
-		}
-		else
-		{
-			return false; // Pass the event to the scroll bar
-		}
-	}
-	else if( o == viewport() )
-	{
-		if( e->type() == QEvent::MouseButtonPress )
-		{
-			// Mark that we have pressed the button. This will prevent the list from scrolling when
-			// the current item has changed due to mouse click. It's fine when the keypresses cause
-			// it scroll, but not mouse.
-			d->mousePressed = true;
-		} 
-		else if( e->type() == QEvent::MouseButtonRelease )
-		{
-			d->mousePressed = false;
-		}
-		else if( e->type() == QEvent::DragMove )
-		{
-			// OK, user is dragging something in the list
-			QDragMoveEvent *event = static_cast<QDragMoveEvent*>(e);
-			if( event->pos().y() < d->smoothAutoScrollOffset )
-			{ // If he's too close to the upper edge, let's smootly scroll up
-				d->targetScrollBarValue -= ( d->smoothAutoScrollOffset - event->pos().y() ) * d->scrollBarAccelerationConstant / 3;
-			}
-			else if( event->pos().y() > ( visibleHeight() - d->smoothAutoScrollOffset ) )
-			{ // If he's too close to the bottom edege, then let's smoothle scroll down
-				d->targetScrollBarValue += ( event->pos().y() - visibleHeight() + d->smoothAutoScrollOffset ) * d->scrollBarAccelerationConstant / 3;
-			}
-			// Make sure if the targetScrollBarValue is in the scroll bar values range
-			d->targetScrollBarValue = QMAX( d->targetScrollBarValue, verticalScrollBar()->minValue() );
-			d->targetScrollBarValue = QMIN( d->targetScrollBarValue, verticalScrollBar()->maxValue() );
-		}
-		else if( e->type() == QEvent::MouseMove ) // Activity detected ( used to aut-hide scroll bar )
-		{
-			// Get our QMouseEvent so that we can have our relative mouse position
-			QMouseEvent *event = static_cast<QMouseEvent*>(e);
-
-			if( d->scrollAutoHide ) // If auto-hide scroll bar is enabled
-			{
-				setVScrollBarMode( Auto );			// show the scroll bar
-				d->scrollAutoHideCounter = 9999;		// Mouse is on the contact list, so don't hide it
-			}
-
-			if( d->mouseNavigation )
-			{
-				const double offset = static_cast<double>(visibleHeight())/50.0 + d->mouseNavigationOffset;
-				d->targetScrollBarValue = ( event->y() - offset ) * ( static_cast<double>(verticalScrollBar()->maxValue()) /
-										   ( static_cast<double>(visibleHeight()) - offset * 2 ) );
-			}
-		}
-		else if( e->type() == QEvent::Leave )
-		{
-			if( d->scrollAutoHide ) // If auto-hide scroll bar is enabled
-			{
-				d->scrollAutoHideCounter = d->scrollAutoHideTimeout; // Mouse left the contact list, hide it after timeout
-			}
-		}
-
-		return KListView::eventFilter( o, e ); // Pass the event to KListView
-	}
-	else
-	{
-// 		kdDebug( 14000 ) << k_funcinfo << "Unhandled event: [" << o << "][" << o->name() << "][" << o->className() << "][" << e->type() << "]" << endl;
-		return KListView::eventFilter( o, e ); // Pass the event to KListView
-	}
-	
-	return false;
-}
-
-void ListView::slotCurrentChanged( QListViewItem *item )
-{
-	if( !item ) return;
-	// If the current item changed due to mouse click then don't center it in the listview. Do this just for key presses.
-	if( d->mousePressed ){ d->mousePressed = false; return; }
-	d->targetScrollBarValue = itemPos(item) - static_cast<double>(visibleHeight()/2.0) + item->height();
-	// Make sure it's in the boundaries of scroll bar
-	d->targetScrollBarValue = QMAX( d->targetScrollBarValue, verticalScrollBar()->minValue() );
-	d->targetScrollBarValue = QMIN( d->targetScrollBarValue, verticalScrollBar()->maxValue() );
-}
-
-
 } // END namespace ListView
 } // END namespace UI
 } // END namespace Kopete
Index: kopete/libkopete/ui/kopetelistview.h
===================================================================
--- kopete/libkopete/ui/kopetelistview.h	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kopete/libkopete/ui/kopetelistview.h	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -50,79 +50,6 @@
 	 */
 	void setShowTreeLines( bool bShowAsTree );
 
-	/**
-	 * Sets the smooth scrolling.
-	 */
-	void setSmoothScrolling( bool );
-
-	/**
-	 * Gets the smooth scrolling status
-	 */
-	bool smoothScrolling() const;
-
-	/**
-	 * Sets the update interval of smooth scrolling animation.
-	 * @param interval is the interval in ms.
-	 */
-	void setSmoothScrollingTimerInterval( double interval );
-
-	/**
-	 * Gets the current update interval.
-	 */
-	double smoothScrollingTimerInterval() const;
-
-	/**
-	 * Sets scroll auto hide feature
-	 * This method implicitly calls setIgnoreGlobalScrolLAutoHide(true) by default.
-	 * If you want not to ignore global changes, explicitly call setIgnoreGlobalScrollAutoHide(false).
-	 *
-	 * Note: No matter what is the previous vScrollBarMode is, when `false' is provided to this method
-	 * new vScrollBarMode will be `Auto'. So it's programmers responsibility to keep track of vScrollBarMode
-	 * @see setVScrollBarMode( ScrollBarMode )
-	 */
-	void setScrollAutoHide( bool b );
-	
-	/**
-	 * Gets scroll auto hide feature status
-	 */
-	bool scrollAutoHide() const;
-
-	/**
-	 * Sets the amount of time to hide scrollbar after inactivity. ( in seconds )
-	 * Note: If not called, default value 10 will be used.
-	 */
-	void setScrollAutoHideTimeout( int );
-	
-	/**
-	 * Gets the scroll bar auto-hide timeout value.
-	 */
-	int scrollAutoHideTimeout() const;
-
-	/**
-	 * Sets always hide feature
-	 * Note: No matter what is the previous vScrollBarMode is, when `false' is provided to this method
-	 * new vScrollBarMode will be `Auto'. So it's programmers responsibility to keep track of vScrollBarMode
-	 * @see setVScrollBarMode( ScrollBarMode )
-	 */
-	void setScrollHide( bool b );
-
-	/**
-	 * Gets always hide feature state
-	 */
-	bool scrollHide() const;
-
-	/**
-	 * Sets the mouse navigation status.
-	 * Contact list slider is always automagically adjusted to the content's Y position,
-	 * which means, the scroll bar's slider will follow your cursor while it on the contact
-	 * list.
-	 */
-	void setMouseNavigation( bool b );
-
-	/**
-	 * Gets the mouse navigation status
-	 */
-	bool mouseNavigation() const;
 public slots:
 	/**
 	 * Calls QListView::sort()
@@ -130,29 +57,9 @@
 	void slotSort() { sort(); }
 protected:
 	virtual void keyPressEvent( QKeyEvent *e );
-	/**
-	 * Invoked on each timeout of a QTimer of this listview,
-	 * This will manage the smooth scrolling animation, continuous presses to the scrollbars.
-	 */
-	virtual void timerEvent( QTimerEvent *e );
-	
-	/**
-	 * To make smooth scrolling work well, we need extensive event intercepting.
-	 * This event filter is suppposed to achive that.
-	 */
-	virtual bool eventFilter( QObject *o, QEvent *e );
-
 private slots:
 	void slotContextMenu(KListView*,QListViewItem *item, const QPoint &point );
 	void slotDoubleClicked( QListViewItem *item );
-	/**
-	 * To enable smooth scroll to focus on highlighted items when they are highlighted
-	 * by a key press we use this slot. slotCurrentChanged is connected to the currentChanged
-	 * signal, it's being invoked in every selection change. If the selection change was made
-	 * by the mouse, then we don't do anything, since the item is on the viewable area already.
-	 * Otherwise, we focus (bring it to the center of the list) smoothly.
-	 */
-	void slotCurrentChanged( QListViewItem *item );
 private:
 	struct Private;
 	Private *d;
Index: knewsticker/knewsticker-standalone.desktop
===================================================================
--- knewsticker/knewsticker-standalone.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ knewsticker/knewsticker-standalone.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -92,4 +92,4 @@
 Terminal=false
 X-KDE-StartupNotify=true
 X-DCOP-ServiceType=Unique
-Categories=Qt;KDE;Network;X-KDE-More;
+Categories=Qt;KDE;Network;X-KDE-More;News;
Index: kget/kget.desktop
===================================================================
--- kget/kget.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kget/kget.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -71,5 +71,5 @@
 GenericName[zh_CN]=下载管理器
 GenericName[zh_HK]=下載管理員
 GenericName[zh_TW]=下載管理員
-Categories=Qt;KDE;Network;
+Categories=Qt;KDE;Network;FileTransfer;
 X-DCOP-ServiceType=Unique
Index: filesharing/advanced/kcm_sambaconf/kcmsambaconf.cpp
===================================================================
--- filesharing/advanced/kcm_sambaconf/kcmsambaconf.cpp	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ filesharing/advanced/kcm_sambaconf/kcmsambaconf.cpp	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -1104,7 +1104,7 @@
       KMessageBox::sorry(0,i18n("Joining the domain %1 failed.").arg(dlg->domainEdit->text()));
     }
   }
-
+  delete dlg;
 }
 
 
Index: filesharing/advanced/kcm_sambaconf/kcmsambaconf.desktop
===================================================================
--- filesharing/advanced/kcm_sambaconf/kcmsambaconf.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ filesharing/advanced/kcm_sambaconf/kcmsambaconf.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -12,7 +12,7 @@
 X-KDE-HasReadOnlyMode=true
 X-KDE-RootOnly=true
 X-KDE-ParentApp=kcontrol
-Categories=Qt;KDE;X-KDE-settings-network;
+Categories=Qt;KDE;X-KDE-settings-network;Settings;
 OnlyShowIn=KDE;
 
 Comment=A module to configure shares for Microsoft Windows
Index: filesharing/simple/fileshare.desktop
===================================================================
--- filesharing/simple/fileshare.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ filesharing/simple/fileshare.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -160,4 +160,4 @@
 Keywords[uk]=Спільний ресурс
 Keywords[zh_CN]=Share,共享
 
-Categories=Qt;KDE;X-KDE-settings-network;
+Categories=Qt;KDE;X-KDE-settings-network;Settings;
Index: kdict/kdict.desktop
===================================================================
--- kdict/kdict.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kdict/kdict.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -147,4 +147,4 @@
 X-KDE-StartupNotify=true
 X-DCOP-ServiceType=Unique
 DocPath=kdict/index.html
-Categories=Qt;KDE;Network;X-KDE-More;
+Categories=Qt;KDE;Network;X-KDE-More;Office;Dictionary;
Index: wifi/kcmwifi/kcmwifi.desktop
===================================================================
--- wifi/kcmwifi/kcmwifi.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ wifi/kcmwifi/kcmwifi.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -154,4 +154,4 @@
 Keywords[uz]=тармоқ,orinoco,симсиз,wlan,wlan-ng,симсиз тармоқ,wifi,Ad-Hoc
 Keywords[zh_CN]=network,orinoco,wireless,wlan,wlan-ng,wifi,Ad-Hoc,网络,无线,无线网络
 
-Categories=Qt;KDE;X-KDE-settings-network;
+Categories=Qt;KDE;X-KDE-settings-network;Settings;
Index: wifi/kwifimanager.desktop
===================================================================
--- wifi/kwifimanager.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ wifi/kwifimanager.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -126,4 +126,4 @@
 GenericName[zh_CN]=无线局域网管理器
 GenericName[zh_HK]=無線網絡管理員
 GenericName[zh_TW]=無線網路管理者
-Categories=Qt;KDE;Network;X-KDE-More;
+Categories=Qt;KDE;Network;X-KDE-More;System;Monitor;
Index: kppp/Kppp.desktop
===================================================================
--- kppp/Kppp.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kppp/Kppp.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -67,4 +67,4 @@
 Terminal=false
 X-KDE-StartupNotify=true
 X-DCOP-ServiceType=Multi
-Categories=Qt;KDE;Network;
+Categories=Qt;KDE;Network;Dialup;
Index: kppp/logview/kppplogview.desktop
===================================================================
--- kppp/logview/kppplogview.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ kppp/logview/kppplogview.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -73,4 +73,4 @@
 Type=Application
 Terminal=false
 X-DCOP-ServiceType=Multi
-Categories=Qt;KDE;Network;X-KDE-More;
+Categories=Qt;KDE;Network;X-KDE-More;Dialup;
Index: ktalkd/kcmktalkd/kcmktalkd.desktop
===================================================================
--- ktalkd/kcmktalkd/kcmktalkd.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ ktalkd/kcmktalkd/kcmktalkd.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -203,4 +203,4 @@
 Keywords[zh_TW]=talk,announcement,client,sound,answering,mail,caller,banner,forward,destination,聊天,公佈,客戶端,聲音,答覆,郵件,呼叫者,目的地
 Keywords[zu]=khuluma,isaziso,umthengi,umsindo,iyaphendula,iposi,umbizi,ibhodi elinomyalezo,phambili,indawo ophikekelekuyo
 
-Categories=Qt;KDE;X-KDE-settings-network;
+Categories=Qt;KDE;X-KDE-settings-network;Settings;
Index: ksirc/ksirc.desktop
===================================================================
--- ksirc/ksirc.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ ksirc/ksirc.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -83,4 +83,4 @@
 Terminal=false
 X-KDE-StartupNotify=true
 X-DCOP-ServiceType=Multi
-Categories=Qt;KDE;Network;
+Categories=Qt;KDE;Network;IRCClient;
Index: dcoprss/rssservice.desktop
===================================================================
--- dcoprss/rssservice.desktop	(.../tags/KDE/3.5.7/kdenetwork)	(wersja 669587)
+++ dcoprss/rssservice.desktop	(.../branches/KDE/3.5/kdenetwork)	(wersja 669587)
@@ -21,6 +21,7 @@
 Name[ro]=Serviciu RSS
 Name[sv]=RSS-tjänst
 Name[ta]=rssசேவை
+Name[th]=บริการ rss
 Name[tr]=rssservisi
 Exec=rssservice
 X-DCOP-ServiceType=Unique
@@ -75,6 +76,7 @@
 Comment[sv]=RSS DCOP-tjänster
 Comment[ta]=RSS DCOP சேவைகள்
 Comment[tg]=Хадамотҳои RSS DCOP
+Comment[th]=บริการ RSS DCOP
 Comment[tr]=RSS DCOP hizmetleri
 Comment[uk]=Служби RSS DCOP
 Comment[uz]=RSS DCOP хизматлари

Zmiany atrybutów dla: .
___________________________________________________________________
Nazwa: svn:externals
   + admin https://svn.kde.org/home/kde/branches/KDE/3.5/kde-common/admin


